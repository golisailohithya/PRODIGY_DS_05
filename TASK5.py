# -*- coding: utf-8 -*-
"""Untitled39.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UOxjqpbl1JbOxPQVsKbwfkOd1r8mYwRL
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Generate synthetic traffic accident data
np.random.seed(42)
n = 1000  # Number of records

data = pd.DataFrame({
    'Start_Time': pd.date_range(start='2023-01-01', periods=n, freq='H'),
    'Road_Condition': np.random.choice(['Dry', 'Wet', 'Snow', 'Ice'], size=n),
    'Weather_Condition': np.random.choice(['Clear', 'Rain', 'Fog', 'Snow'], size=n),
    'Severity': np.random.randint(1, 5, size=n),
    'Latitude': np.random.uniform(34.0, 42.0, size=n),
    'Longitude': np.random.uniform(-118.0, -74.0, size=n)
})

# Step 2: Time-based features
data['Hour'] = data['Start_Time'].dt.hour
data['Weekday'] = data['Start_Time'].dt.day_name()

# Step 3: Plot - Accidents by hour of day
plt.figure(figsize=(10, 5))
sns.countplot(x='Hour', data=data, palette='coolwarm')
plt.title('Accidents by Hour of Day')
plt.xlabel('Hour')
plt.ylabel('Count')
plt.show()

# Step 4: Plot - Accidents by road condition
plt.figure(figsize=(8, 4))
sns.countplot(x='Road_Condition', data=data, palette='Set2')
plt.title('Accidents by Road Condition')
plt.show()

# Step 5: Plot - Accidents by weather condition
plt.figure(figsize=(8, 4))
sns.countplot(x='Weather_Condition', data=data, palette='Set3')
plt.title('Accidents by Weather Condition')
plt.show()

# Step 6: Heatmap of accident locations
plt.figure(figsize=(10, 6))
sns.kdeplot(
    x=data['Longitude'],
    y=data['Latitude'],
    cmap='Reds',
    shade=True,
    bw_adjust=1
)
plt.title('Accident Hotspots (Simulated)')
plt.xlabel('Longitude')
plt.ylabel('Latitude')
plt.show()